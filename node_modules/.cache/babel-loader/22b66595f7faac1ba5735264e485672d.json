{"ast":null,"code":"var _jsxFileName = \"/Users/janis/Desktop/Kasino/src/components/SlotMachineList.js\";\nimport React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport Row from './Row';\nimport RemoveRow from './RemoveRow';\nimport EditRow from './EditRow';\nexport default class SlotMachineList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeToRemoveMode = id => {\n      let tempId = parseInt(id, 10);\n\n      for (let i = 0; i < this.props.list.length; i++) {\n        if (tempId === this.props.list[i].id) {\n          this.setState({\n            removeIndex: i,\n            editIndex: -1\n          });\n        }\n      }\n    };\n\n    this.changeToEditMode = id => {\n      let tempId = parseInt(id, 10);\n\n      for (let i = 0; i < this.props.list.length; i++) {\n        if (tempId === this.props.list[i].id) {\n          this.setState({\n            editIndex: i,\n            removeIndex: -1\n          });\n        }\n      }\n    };\n\n    this.cancel = () => {\n      this.setState({\n        removeIndex: -1,\n        editIndex: -1\n      });\n    };\n\n    this.removeFromList = id => {\n      this.props.removeFromList(id);\n      this.cancel();\n    };\n\n    this.editItem = item => {\n      this.props.editItem(item);\n      this.cancel();\n    };\n\n    this.state = {\n      removeIndex: -1,\n      editIndex: -1\n    };\n  }\n\n  render() {\n    let items = this.props.list.map((item, index) => {\n      if (this.state.editIndex === index) {\n        return /*#__PURE__*/React.createElement(EditRow, {\n          key: item.id,\n          item: item,\n          cancel: this.cancel,\n          editItem: this.editItem,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }\n        });\n      }\n\n      if (this.state.removeIndex === index) {\n        return /*#__PURE__*/React.createElement(RemoveRow, {\n          key: item.id,\n          item: item,\n          cancel: this.cancel,\n          removeFromList: this.removeFromList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Row, {\n        key: item.id,\n        item: item,\n        changeToRemoveMode: this.changeToRemoveMode,\n        changeToEditMode: this.changeToEditMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"Count\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, \"Remove\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Edit\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, items));\n  }\n\n}","map":{"version":3,"sources":["/Users/janis/Desktop/Kasino/src/components/SlotMachineList.js"],"names":["React","Table","Row","RemoveRow","EditRow","SlotMachineList","Component","constructor","props","changeToRemoveMode","id","tempId","parseInt","i","list","length","setState","removeIndex","editIndex","changeToEditMode","cancel","removeFromList","editItem","item","state","render","items","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport Row from './Row';\nimport RemoveRow from './RemoveRow';\nimport EditRow from './EditRow';\n\nexport default class SlotMachineList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      removeIndex: -1,\n      editIndex: -1,\n    };\n  }\n\n  changeToRemoveMode = (id) => {\n    let tempId = parseInt(id, 10);\n    for (let i = 0; i < this.props.list.length; i++) {\n      if (tempId === this.props.list[i].id) {\n        this.setState({\n          removeIndex: i,\n          editIndex: -1,\n        });\n      }\n    }\n  };\n\n  changeToEditMode = (id) => {\n    let tempId = parseInt(id, 10);\n    for (let i = 0; i < this.props.list.length; i++) {\n      if (tempId === this.props.list[i].id) {\n        this.setState({\n          editIndex: i,\n          removeIndex: -1,\n        });\n      }\n    }\n  };\n\n  cancel = () => {\n    this.setState({\n      removeIndex: -1,\n      editIndex: -1,\n    });\n  };\n\n  removeFromList = (id) => {\n    this.props.removeFromList(id);\n    this.cancel();\n  };\n\n  editItem = (item) => {\n    this.props.editItem(item);\n    this.cancel();\n  };\n\n  render() {\n    let items = this.props.list.map((item, index) => {\n      if (this.state.editIndex === index) {\n        return (\n          <EditRow\n            key={item.id}\n            item={item}\n            cancel={this.cancel}\n            editItem={this.editItem}\n          />\n        );\n      }\n\n      if (this.state.removeIndex === index) {\n        return (\n          <RemoveRow\n            key={item.id}\n            item={item}\n            cancel={this.cancel}\n            removeFromList={this.removeFromList}\n          />\n        );\n      }\n      return (\n        <Row\n          key={item.id}\n          item={item}\n          changeToRemoveMode={this.changeToRemoveMode}\n          changeToEditMode={this.changeToEditMode}\n        />\n      );\n    });\n    return (\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Type</Table.HeaderCell>\n            <Table.HeaderCell>Count</Table.HeaderCell>\n            <Table.HeaderCell>Price</Table.HeaderCell>\n            <Table.HeaderCell>Remove</Table.HeaderCell>\n            <Table.HeaderCell>Edit</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>{items}</Table.Body>\n      </Table>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}